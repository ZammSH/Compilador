storage_class_specifier : TYPEDEF
struct_or_union : STRUCT
type_specifier : INT
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration
type_specifier : CHAR
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
primary_expression : CONSTANT
postfix_expression : primary_expression 
unary_expression : postfix_expression 
cast_expression : unary_expression 
multiplicative_expression : cast_expression 
additive_expression : multiplicative_expression 
shift_expression : additive_expression 
relational_expression : shift_expression 
equality_expression : relational_expression 
and_expression : equality_expression
exclusive_or_expression : and_expression
inclusive_or_expression : exclusive_or_expression
logical_and_expression : inclusive_or_expression
logical_or_expression : logical_and_expression
conditional_expression : logical_or_expression
constant_expression : conditional_expression
direct_declarator : direct_declarator '[' constant_expression ']'
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration_list struct_declaration
type_specifier : CHAR
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
primary_expression : CONSTANT
postfix_expression : primary_expression 
unary_expression : postfix_expression 
cast_expression : unary_expression 
multiplicative_expression : cast_expression 
additive_expression : multiplicative_expression 
shift_expression : additive_expression 
relational_expression : shift_expression 
equality_expression : relational_expression 
and_expression : equality_expression
exclusive_or_expression : and_expression
inclusive_or_expression : exclusive_or_expression
logical_and_expression : inclusive_or_expression
logical_or_expression : logical_and_expression
conditional_expression : logical_or_expression
constant_expression : conditional_expression
direct_declarator : direct_declarator '[' constant_expression ']'
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration_list struct_declaration
type_specifier : CHAR
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
primary_expression : CONSTANT
postfix_expression : primary_expression 
unary_expression : postfix_expression 
cast_expression : unary_expression 
multiplicative_expression : cast_expression 
additive_expression : multiplicative_expression 
shift_expression : additive_expression 
relational_expression : shift_expression 
equality_expression : relational_expression 
and_expression : equality_expression
exclusive_or_expression : and_expression
inclusive_or_expression : exclusive_or_expression
logical_and_expression : inclusive_or_expression
logical_or_expression : logical_and_expression
conditional_expression : logical_or_expression
constant_expression : conditional_expression
direct_declarator : direct_declarator '[' constant_expression ']'
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration_list struct_declaration
type_specifier : INT
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
primary_expression : CONSTANT
postfix_expression : primary_expression 
unary_expression : postfix_expression 
cast_expression : unary_expression 
multiplicative_expression : cast_expression 
additive_expression : multiplicative_expression 
shift_expression : additive_expression 
relational_expression : shift_expression 
equality_expression : relational_expression 
and_expression : equality_expression
exclusive_or_expression : and_expression
inclusive_or_expression : exclusive_or_expression
logical_and_expression : inclusive_or_expression
logical_or_expression : logical_and_expression
conditional_expression : logical_or_expression
constant_expression : conditional_expression
direct_declarator : direct_declarator '[' constant_expression ']'
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration_list struct_declaration
type_specifier : INT
specifier_qualifier_list : type_specifier
direct_declarator : IDENTIFIER
primary_expression : CONSTANT
postfix_expression : primary_expression 
unary_expression : postfix_expression 
cast_expression : unary_expression 
multiplicative_expression : cast_expression 
additive_expression : multiplicative_expression 
shift_expression : additive_expression 
relational_expression : shift_expression 
equality_expression : relational_expression 
and_expression : equality_expression
exclusive_or_expression : and_expression
inclusive_or_expression : exclusive_or_expression
logical_and_expression : inclusive_or_expression
logical_or_expression : logical_and_expression
conditional_expression : logical_or_expression
constant_expression : conditional_expression
direct_declarator : direct_declarator '[' constant_expression ']'
declarator : direct_declarator
struct_declarator :  declarator
struct_declarator_list : struct_declarator
struct_declaration : specifier_qualifier_list struct_declarator_list ';'
struct_declaration_list : struct_declaration_list struct_declaration
struct_or_union_specifier : struct_or_union IDENTIFIER '{' struct_declaration_list '}'
type_specifier : struct_or_union_specifier
declaration_specifiers : type_specifier
declaration_specifiers : storage_class_specifier declaration_specifiers
direct_declarator : IDENTIFIER
declarator : direct_declarator
init_declarator : init_declarator
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list ';'
external_declaration : declaration
translation_unit : external_declaration
storage_class_specifier : TYPEDEF
struct_or_union : STRUCT

Error: syntax error en l√≠nea 13 columna 12
